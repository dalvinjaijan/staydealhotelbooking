"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const adminController_1 = require("../../controllers/admin/adminController");
const adminRepository_1 = require("../../../repositories/adminRepository");
const adminInteractor_1 = require("../../../Interactors/adminInteractor");
const adminRouter = express_1.default.Router();
const repository = new adminRepository_1.adminRepository();
const interactor = new adminInteractor_1.adminInteractor(repository);
const controller = new adminController_1.adminController(interactor);
adminRouter.post('/login', controller.login.bind(controller));
adminRouter.post('/logout', controller.logout.bind(controller));
adminRouter.get('/getHotelRequest', controller.fetchHotelRequests.bind(controller));
adminRouter.patch('/approveHotelRequest', controller.approveHotelRequest.bind(controller));
adminRouter.get('/getApprovedHotels', controller.fetchApprovedHotel.bind(controller));
adminRouter.patch('/blockHotel', controller.blockHotel.bind(controller));
adminRouter.get('/getRejectedHotels', controller.fetchRejectedHotel.bind(controller));
adminRouter.get('/fetchUsers', controller.fetchUsers.bind(controller));
adminRouter.patch('/blockUser', controller.blockUser.bind(controller));
adminRouter.patch('/unBlockUser', controller.unBlockUser.bind(controller));
adminRouter.get('/getEditedHotelsRequest', controller.getEditedHotelsRequest.bind(controller));
adminRouter.patch('/rejectHotelEditRequest', controller.rejectEditHotelsRequest.bind(controller));
adminRouter.patch('/approveEditHotelRequest', controller.approveEditHotelsRequest.bind(controller));
exports.default = adminRouter;
